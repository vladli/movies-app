// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(auto()) @map("_id") @db.ObjectId
  userId                   String  @db.ObjectId
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.String
  refresh_token_expires_in Int?
  access_token             String? @db.String
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.String
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime? @default(now()) @map(name: "created_at")
  updatedAt DateTime? @default(now()) @map(name: "updated_at")

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  password       String?
  image          String?
  accounts       Account[]
  sessions       Session[]
  role           String?
  favoriteMovies Json[]

  createdAt DateTime? @default(now()) @map(name: "created_at")
  updatedAt DateTime? @default(now()) @map(name: "updated_at")
}

model VerificationToken {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String    @unique
  expires    DateTime
  createdAt  DateTime? @default(now()) @map(name: "created_at")
  updatedAt  DateTime? @default(now()) @map(name: "updated_at")

  @@unique([id, token])
}
